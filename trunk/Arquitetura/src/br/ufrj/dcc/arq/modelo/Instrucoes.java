package br.ufrj.dcc.arq.modelo;

import br.ufrj.dcc.arq.controle.Controlador;
import br.ufrj.dcc.arq.vista.Comecar;
import br.ufrj.dcc.arq.vista.PainelPrincipal;

/**
 * Classe que contem as instrucoes da Arquitetura
 */

public class Instrucoes extends Thread {

	public static String nomeMicroInstrucao = null;

	public static boolean executa_por_micro = false;

	public Instrucoes(){

	}

	public static void Cabecalho(Processador proc){

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_IR_rec_RDados(proc));
		proc.memoriacontrole.IR_rec_RDados(proc);

		nomeMicroInstrucao = "IR_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void halt(Processador proc) {
		Cabecalho(proc);
		proc.executa_programa = false;
	}

	/* ==================== Instrucoes ADD ==================== */

	public static void addImedR0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);

		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);

		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisRY(proc));
		proc.memoriacontrole.R0_rec_R0maisRY(proc);

		nomeMicroInstrucao = "R0_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addImedR1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisRY(proc));
		proc.memoriacontrole.R1_rec_R1maisRY(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addImedR2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisRDados(proc));
		proc.memoriacontrole.R2_rec_R2maisRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addImedR3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisRDados(proc));
		proc.memoriacontrole.R3_rec_R3maisRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addImedR4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisRDados(proc));
		proc.memoriacontrole.R4_rec_R4maisRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addImedER0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addImedER1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addImedER2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addImedER3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");
			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addImedER4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R0(proc));
		proc.memoriacontrole.RY_rec_R0(proc);
		nomeMicroInstrucao = "RY_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisRY(proc));
		proc.memoriacontrole.R0_rec_R0maisRY(proc);
		nomeMicroInstrucao = "R0_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R0(proc));
		proc.memoriacontrole.RY_rec_R0(proc);
		nomeMicroInstrucao = "RY_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisRY(proc));
		proc.memoriacontrole.R1_rec_R1maisRY(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisR0(proc));
		proc.memoriacontrole.R2_rec_R2maisR0(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisR0(proc));
		proc.memoriacontrole.R3_rec_R3maisR0(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisR0(proc));
		proc.memoriacontrole.R4_rec_R4maisR0(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R1(proc));
		proc.memoriacontrole.RY_rec_R1(proc);
		nomeMicroInstrucao = "RY_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisRY(proc));
		proc.memoriacontrole.R0_rec_R0maisRY(proc);
		nomeMicroInstrucao = "R0_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void addR1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R1(proc));
		proc.memoriacontrole.RY_rec_R1(proc);
		nomeMicroInstrucao = "RY_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisRY(proc));
		proc.memoriacontrole.R1_rec_R1maisRY(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR1R2(Processador proc) {
		Cabecalho(proc);
		System.out.println("To na instrucao");
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisR1(proc));
		proc.memoriacontrole.R2_rec_R2maisR1(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void addR1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisR1(proc));
		proc.memoriacontrole.R3_rec_R3maisR1(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisR1(proc));
		proc.memoriacontrole.R4_rec_R4maisR1(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisR2(proc));
		proc.memoriacontrole.R0_rec_R0maisR2(proc);
		nomeMicroInstrucao = "R0_REC_R0MAISR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisR2(proc));
		proc.memoriacontrole.R1_rec_R1maisR2(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisRX(proc));
		proc.memoriacontrole.R2_rec_R2maisRX(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisRX(proc));
		proc.memoriacontrole.R3_rec_R3maisRX(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisRX(proc));
		proc.memoriacontrole.R4_rec_R4maisRX(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisR3(proc));
		proc.memoriacontrole.R0_rec_R0maisR3(proc);
		nomeMicroInstrucao = "R0_REC_R0MAISR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisR3(proc));
		proc.memoriacontrole.R1_rec_R1maisR3(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisRX(proc));
		proc.memoriacontrole.R2_rec_R2maisRX(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisRX(proc));
		proc.memoriacontrole.R3_rec_R3maisRX(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisRX(proc));
		proc.memoriacontrole.R4_rec_R4maisRX(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisR4(proc));
		proc.memoriacontrole.R0_rec_R0maisR4(proc);
		nomeMicroInstrucao = "R0_REC_R0MAISR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisR4(proc));
		proc.memoriacontrole.R1_rec_R1maisR4(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisRX(proc));
		proc.memoriacontrole.R2_rec_R2maisRX(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisRX(proc));
		proc.memoriacontrole.R3_rec_R3maisRX(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisRX(proc));
		proc.memoriacontrole.R4_rec_R4maisRX(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		System.out.println("REND = " + proc.registrador.rend);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		System.out.println("INF LIDA = " + proc.memoria.dadoLido);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);
		System.out.println("RDADOS = " + proc.registrador.rdados);
		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		System.out.println("RY = " + proc.registrador.ry);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0maisRY(proc));
		proc.memoriacontrole.RDados_rec_R0maisRY(proc);
		System.out.println("R0 = " + proc.registrador.r0);
		System.out.println("RDADOS = " + proc.registrador.rdados);
		nomeMicroInstrucao = "RDADOS_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		System.out.println("POSICAO 50 = " + proc.memoria.getMemPos(50));
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0maisRY(proc));
		proc.memoriacontrole.RDados_rec_R0maisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0maisRY(proc));
		proc.memoriacontrole.RDados_rec_R0maisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0maisRY(proc));
		proc.memoriacontrole.RDados_rec_R0maisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0maisRY(proc));
		proc.memoriacontrole.RDados_rec_R0maisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1maisRY(proc));
		proc.memoriacontrole.RDados_rec_R1maisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1maisRY(proc));
		proc.memoriacontrole.RDados_rec_R1maisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1maisRY(proc));
		proc.memoriacontrole.RDados_rec_R1maisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1maisRY(proc));
		proc.memoriacontrole.RDados_rec_R1maisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1maisRY(proc));
		proc.memoriacontrole.RDados_rec_R1maisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2maisRX(proc));
		proc.memoriacontrole.RDados_rec_R2maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2maisRX(proc));
		proc.memoriacontrole.RDados_rec_R2maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2maisRX(proc));
		proc.memoriacontrole.RDados_rec_R2maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2maisRX(proc));
		proc.memoriacontrole.RDados_rec_R2maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2maisRX(proc));
		proc.memoriacontrole.RDados_rec_R2maisRX(proc);
		nomeMicroInstrucao = "R2DADOS_REC_R2_MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3maisRX(proc));
		proc.memoriacontrole.RDados_rec_R3maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3maisRX(proc));
		proc.memoriacontrole.RDados_rec_R3maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3maisRX(proc));
		proc.memoriacontrole.RDados_rec_R3maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3maisRX(proc));
		proc.memoriacontrole.RDados_rec_R3maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3MAISX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3maisRX(proc));
		proc.memoriacontrole.RDados_rec_R3maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4maisRX(proc));
		proc.memoriacontrole.RDados_rec_R4maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4maisRX(proc));
		proc.memoriacontrole.RDados_rec_R4maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4maisRX(proc));
		proc.memoriacontrole.RDados_rec_R4maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4maisRX(proc));
		proc.memoriacontrole.RDados_rec_R4maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addR4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4maisRX(proc));
		proc.memoriacontrole.RDados_rec_R4maisRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4MAISRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisRY(proc));
		proc.memoriacontrole.R0_rec_R0maisRY(proc);
		nomeMicroInstrucao = "R0_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisRY(proc));
		proc.memoriacontrole.R1_rec_R1maisRY(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisRDados(proc));
		proc.memoriacontrole.R2_rec_R2maisRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisRDados(proc));
		proc.memoriacontrole.R3_rec_R3maisRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisRDados(proc));
		proc.memoriacontrole.R4_rec_R4maisRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisRY(proc));
		proc.memoriacontrole.R0_rec_R0maisRY(proc);
		nomeMicroInstrucao = "R0_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisRY(proc));
		proc.memoriacontrole.R1_rec_R1maisRY(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisRDados(proc));
		proc.memoriacontrole.R2_rec_R2maisRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisRDados(proc));
		proc.memoriacontrole.R3_rec_R3maisRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisRDados(proc));
		proc.memoriacontrole.R4_rec_R4maisRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisRY(proc));
		proc.memoriacontrole.R0_rec_R0maisRY(proc);
		nomeMicroInstrucao = "R0_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisRY(proc));
		proc.memoriacontrole.R1_rec_R1maisRY(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisRDados(proc));
		proc.memoriacontrole.R2_rec_R2maisRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisRDados(proc));
		proc.memoriacontrole.R3_rec_R3maisRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisRDados(proc));
		proc.memoriacontrole.R4_rec_R4maisRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisRY(proc));
		proc.memoriacontrole.R0_rec_R0maisRY(proc);
		nomeMicroInstrucao = "R0_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisRY(proc));
		proc.memoriacontrole.R1_rec_R1maisRY(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisRDados(proc));
		proc.memoriacontrole.R2_rec_R2maisRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisRDados(proc));
		proc.memoriacontrole.R3_rec_R3maisRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisRDados(proc));
		proc.memoriacontrole.R4_rec_R4maisRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0maisRY(proc));
		proc.memoriacontrole.R0_rec_R0maisRY(proc);
		nomeMicroInstrucao = "R0_REC_R0MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1maisRY(proc));
		proc.memoriacontrole.R1_rec_R1maisRY(proc);
		nomeMicroInstrucao = "R1_REC_R1MAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2maisRDados(proc));
		proc.memoriacontrole.R2_rec_R2maisRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3maisRDados(proc));
		proc.memoriacontrole.R3_rec_R3maisRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4maisRDados(proc));
		proc.memoriacontrole.R4_rec_R4maisRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4MAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void addER0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void addER0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void addER4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosmaisRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosmaisRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSMAISRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	/* ==================== Instrucoes SUB ==================== */
	public static void subImedR0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RYmenosR0(proc));
		proc.memoriacontrole.R0_rec_RYmenosR0(proc);
		nomeMicroInstrucao = "R0_REC_RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subImedR1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RYmenosR1(proc));
		proc.memoriacontrole.R1_rec_RYmenosR1(proc);
		nomeMicroInstrucao = "R1_REC_RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subImedR2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDadosmenosR2(proc));
		proc.memoriacontrole.R2_rec_RDadosmenosR2(proc);
		nomeMicroInstrucao = "R2_REC_RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subImedR3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDadosmenosR3(proc));
		proc.memoriacontrole.R3_rec_RDadosmenosR3(proc);
		nomeMicroInstrucao = "R3_REC_RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subImedR4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDadosmenosR4(proc));
		proc.memoriacontrole.R4_rec_RDadosmenosR4(proc);
		nomeMicroInstrucao = "R4_REC_RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subImedER0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subImedER1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subImedER2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subImedER3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subImedER4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R0(proc));
		proc.memoriacontrole.RY_rec_R0(proc);
		nomeMicroInstrucao = "RY_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RYmenosR0(proc));
		proc.memoriacontrole.R0_rec_RYmenosR0(proc);
		nomeMicroInstrucao = "R0_REC_RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R0(proc));
		proc.memoriacontrole.RY_rec_R0(proc);
		nomeMicroInstrucao = "RY_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RYmenosR1(proc));
		proc.memoriacontrole.R1_rec_RYmenosR1(proc);
		nomeMicroInstrucao = "R1_REC_RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R0menosR2(proc));
		proc.memoriacontrole.R2_rec_R0menosR2(proc);
		nomeMicroInstrucao = "R2_REC_R0MENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R0menosR3(proc));
		proc.memoriacontrole.R3_rec_R0menosR3(proc);
		nomeMicroInstrucao = "R3_REC_R0MENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R0menosR4(proc));
		proc.memoriacontrole.R4_rec_R0menosR4(proc);
		nomeMicroInstrucao = "R4_REC_R0MENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R1(proc));
		proc.memoriacontrole.RY_rec_R1(proc);
		nomeMicroInstrucao = "RY_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RYmenosR0(proc));
		proc.memoriacontrole.R0_rec_RYmenosR0(proc);
		nomeMicroInstrucao = "R0_REC_RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void subR1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R1(proc));
		proc.memoriacontrole.RY_rec_R1(proc);
		nomeMicroInstrucao = "RY_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RYmenosR1(proc));
		proc.memoriacontrole.R1_rec_RYmenosR1(proc);
		nomeMicroInstrucao = "R1_REC_RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R1menosR2(proc));
		proc.memoriacontrole.R2_rec_R1menosR2(proc);
		nomeMicroInstrucao = "R2_REC_R1MENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void subR1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R1menosR3(proc));
		proc.memoriacontrole.R3_rec_R1menosR3(proc);
		nomeMicroInstrucao = "R3_REC_R1MENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R1menosR4(proc));
		proc.memoriacontrole.R4_rec_R1menosR4(proc);
		nomeMicroInstrucao = "R4_REC_R1MENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R2menosR0(proc));
		proc.memoriacontrole.R0_rec_R2menosR0(proc);
		nomeMicroInstrucao = "R0_REC_R2MENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R2menosR1(proc));
		proc.memoriacontrole.R1_rec_R2menosR1(proc);
		nomeMicroInstrucao = "R1_REC_R2MENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RXmenosR2(proc));
		proc.memoriacontrole.R2_rec_RXmenosR2(proc);
		nomeMicroInstrucao = "R2_REC_RXMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RXmenosR3(proc));
		proc.memoriacontrole.R3_rec_RXmenosR3(proc);
		nomeMicroInstrucao = "R3_REC_RXMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RXmenosR4(proc));
		proc.memoriacontrole.R4_rec_RXmenosR4(proc);
		nomeMicroInstrucao = "R4_REC_RXMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R3menosR0(proc));
		proc.memoriacontrole.R0_rec_R3menosR0(proc);
		nomeMicroInstrucao = "R0_REC_R3MENOSRO";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R3menosR1(proc));
		proc.memoriacontrole.R1_rec_R3menosR1(proc);
		nomeMicroInstrucao = "R1_REC_R3MENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RXmenosR2(proc));
		proc.memoriacontrole.R2_rec_RXmenosR2(proc);
		nomeMicroInstrucao = "R2_REC_RXMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RXmenosR3(proc));
		proc.memoriacontrole.R3_rec_RXmenosR3(proc);
		nomeMicroInstrucao = "R3_REC_RXMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RXmenosR4(proc));
		proc.memoriacontrole.R4_rec_RXmenosR4(proc);
		nomeMicroInstrucao = "R4_REC_RXMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R4menosR0(proc));
		proc.memoriacontrole.R0_rec_R4menosR0(proc);
		nomeMicroInstrucao = "R0_REC_R4MENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R4menosR1(proc));
		proc.memoriacontrole.R1_rec_R4menosR1(proc);
		nomeMicroInstrucao = "R1_REC_R4MENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RXmenosR2(proc));
		proc.memoriacontrole.R2_rec_RXmenosR2(proc);
		nomeMicroInstrucao = "R2_REC_RXMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RXmenosR3(proc));
		proc.memoriacontrole.R3_rec_RXmenosR3(proc);
		nomeMicroInstrucao = "R3_REC_RXMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RXmenosR4(proc));
		proc.memoriacontrole.R4_rec_RXmenosR4(proc);
		nomeMicroInstrucao = "R4_REC_RXMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0menosRY(proc));
		proc.memoriacontrole.RDados_rec_R0menosRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0menosRY(proc));
		proc.memoriacontrole.RDados_rec_R0menosRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0menosRY(proc));
		proc.memoriacontrole.RDados_rec_R0menosRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0menosRY(proc));
		proc.memoriacontrole.RDados_rec_R0menosRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0menosRY(proc));
		proc.memoriacontrole.RDados_rec_R0menosRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1menosRY(proc));
		proc.memoriacontrole.RDados_rec_R1menosRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1menosRY(proc));
		proc.memoriacontrole.RDados_rec_R1menosRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1menosRY(proc));
		proc.memoriacontrole.RDados_rec_R1menosRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1menosRY(proc));
		proc.memoriacontrole.RDados_rec_R1menosRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1menosRY(proc));
		proc.memoriacontrole.RDados_rec_R1menosRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2menosRX(proc));
		proc.memoriacontrole.RDados_rec_R2menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2menosRX(proc));
		proc.memoriacontrole.RDados_rec_R2menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2menosRX(proc));
		proc.memoriacontrole.RDados_rec_R2menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2menosRX(proc));
		proc.memoriacontrole.RDados_rec_R2menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2menosRX(proc));
		proc.memoriacontrole.RDados_rec_R2menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3menosRX(proc));
		proc.memoriacontrole.RDados_rec_R3menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3menosRX(proc));
		proc.memoriacontrole.RDados_rec_R3menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3menosRX(proc));
		proc.memoriacontrole.RDados_rec_R3menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3menosRX(proc));
		proc.memoriacontrole.RDados_rec_R3menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3menosRX(proc));
		proc.memoriacontrole.RDados_rec_R3menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4menosRX(proc));
		proc.memoriacontrole.RDados_rec_R4menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4menosRX(proc));
		proc.memoriacontrole.RDados_rec_R4menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4menosRX(proc));
		proc.memoriacontrole.RDados_rec_R4menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4menosRX(proc));
		proc.memoriacontrole.RDados_rec_R4menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subR4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4menosRX(proc));
		proc.memoriacontrole.RDados_rec_R4menosRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RYmenosR0(proc));
		proc.memoriacontrole.R0_rec_RYmenosR0(proc);
		nomeMicroInstrucao = "R0_REC_RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RYmenosR1(proc));
		proc.memoriacontrole.R1_rec_RYmenosR1(proc);
		nomeMicroInstrucao = "R1_REC_RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDadosmenosR2(proc));
		proc.memoriacontrole.R2_rec_RDadosmenosR2(proc);
		nomeMicroInstrucao = "R2_REC_RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDadosmenosR3(proc));
		proc.memoriacontrole.R3_rec_RDadosmenosR3(proc);
		nomeMicroInstrucao = "R3_REC_RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDadosmenosR4(proc));
		proc.memoriacontrole.R4_rec_RDadosmenosR4(proc);
		nomeMicroInstrucao = "R4_REC_RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RYmenosR0(proc));
		proc.memoriacontrole.R0_rec_RYmenosR0(proc);
		nomeMicroInstrucao = "R0_REC_RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RYmenosR1(proc));
		proc.memoriacontrole.R1_rec_RYmenosR1(proc);
		nomeMicroInstrucao = "R1_REC_RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDadosmenosR2(proc));
		proc.memoriacontrole.R2_rec_RDadosmenosR2(proc);
		nomeMicroInstrucao = "R2_REC_RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDadosmenosR3(proc));
		proc.memoriacontrole.R3_rec_RDadosmenosR3(proc);
		nomeMicroInstrucao = "R3_REC_RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDadosmenosR4(proc));
		proc.memoriacontrole.R4_rec_RDadosmenosR4(proc);
		nomeMicroInstrucao = "R4_REC_RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RYmenosR0(proc));
		proc.memoriacontrole.R0_rec_RYmenosR0(proc);
		nomeMicroInstrucao = "R0_REC_RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RYmenosR1(proc));
		proc.memoriacontrole.R1_rec_RYmenosR1(proc);
		nomeMicroInstrucao = "R1_REC_RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDadosmenosR2(proc));
		proc.memoriacontrole.R2_rec_RDadosmenosR2(proc);
		nomeMicroInstrucao = "R2_REC_RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDadosmenosR3(proc));
		proc.memoriacontrole.R3_rec_RDadosmenosR3(proc);
		nomeMicroInstrucao = "R3_REC_RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDadosmenosR4(proc));
		proc.memoriacontrole.R4_rec_RDadosmenosR4(proc);
		nomeMicroInstrucao = "R4_REC_RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RYmenosR0(proc));
		proc.memoriacontrole.R0_rec_RYmenosR0(proc);
		nomeMicroInstrucao = "R0_REC_RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RYmenosR1(proc));
		proc.memoriacontrole.R1_rec_RYmenosR1(proc);
		nomeMicroInstrucao = "R1_REC_RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDadosmenosR2(proc));
		proc.memoriacontrole.R2_rec_RDadosmenosR2(proc);
		nomeMicroInstrucao = "R2_REC_RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDadosmenosR3(proc));
		proc.memoriacontrole.R3_rec_RDadosmenosR3(proc);
		nomeMicroInstrucao = "R3_REC_RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDadosmenosR4(proc));
		proc.memoriacontrole.R4_rec_RDadosmenosR4(proc);
		nomeMicroInstrucao = "R4_REC_RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RYmenosR0(proc));
		proc.memoriacontrole.R0_rec_RYmenosR0(proc);
		nomeMicroInstrucao = "R0_REC_RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RYmenosR1(proc));
		proc.memoriacontrole.R1_rec_RYmenosR1(proc);
		nomeMicroInstrucao = "R1_REC_RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDadosmenosR2(proc));
		proc.memoriacontrole.R2_rec_RDadosmenosR2(proc);
		nomeMicroInstrucao = "R2_REC_RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDadosmenosR3(proc));
		proc.memoriacontrole.R3_rec_RDadosmenosR3(proc);
		nomeMicroInstrucao = "R3_REC_RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDadosmenosR4(proc));
		proc.memoriacontrole.R4_rec_RDadosmenosR4(proc);
		nomeMicroInstrucao = "R4_REC_RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void subER0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void subER0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void subER4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RYmenosRDados(proc));
		proc.memoriacontrole.RDados_rec_RYmenosRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY_MENOS_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}
	/* ==================== Instrucoes MOV ==================== */

	public static void movImedR0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		//Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");
			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");
			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");
			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RDados(proc));
		proc.memoriacontrole.R0_rec_RDados(proc);
		nomeMicroInstrucao = "R0_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");
			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");
			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void movImedR1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RDados(proc));
		proc.memoriacontrole.R1_rec_RDados(proc);
		nomeMicroInstrucao = "R1_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movImedR2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDados(proc));
		proc.memoriacontrole.R2_rec_RDados(proc);
		nomeMicroInstrucao = "R2_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movImedR3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDados(proc));
		proc.memoriacontrole.R3_rec_RDados(proc);
		nomeMicroInstrucao = "R3_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movImedR4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDados(proc));
		proc.memoriacontrole.R4_rec_RDados(proc);
		nomeMicroInstrucao = "R4_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movImedER0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		//System.out.println("PC = " + proc.registrador.pc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		//System.out.println("REND = " + proc.registrador.rend);

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		//System.out.println("DADOLIDO = " + proc.memoria.dadoLido);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		//System.out.println("RDADOS = " + proc.registrador.rdados);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		//System.out.println("RY = " + proc.registrador.ry);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		//System.out.println("REND = " + proc.registrador.rend);

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		//System.out.println("DADO LIDO = " + proc.memoria.dadoLido);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		//System.out.println("RDADOS = " + proc.registrador.rdados);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RY(proc));
		proc.memoriacontrole.RDados_rec_RY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		//System.out.println("RDADOS = " + proc.registrador.rdados);

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movImedER1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RY(proc));
		proc.memoriacontrole.RDados_rec_RY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movImedER2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RY(proc));
		proc.memoriacontrole.RDados_rec_RY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movImedER3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RY(proc));
		proc.memoriacontrole.RDados_rec_RY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movImedER4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RY(proc));
		proc.memoriacontrole.RDados_rec_RY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R0(proc));
		proc.memoriacontrole.R1_rec_R0(proc);
		nomeMicroInstrucao = "R1_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void movR0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R0(proc));
		proc.memoriacontrole.R2_rec_R0(proc);
		nomeMicroInstrucao = "R2_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R0(proc));
		proc.memoriacontrole.R3_rec_R0(proc);
		nomeMicroInstrucao = "R3_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R0(proc));
		proc.memoriacontrole.R4_rec_R0(proc);
		nomeMicroInstrucao = "R4_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R1(proc));
		proc.memoriacontrole.R0_rec_R1(proc);
		nomeMicroInstrucao = "R0_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R1(proc));
		proc.memoriacontrole.R2_rec_R1(proc);
		nomeMicroInstrucao = "R2_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R1(proc));
		proc.memoriacontrole.R3_rec_R1(proc);
		nomeMicroInstrucao = "R3_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R1(proc));
		proc.memoriacontrole.R4_rec_R1(proc);
		nomeMicroInstrucao = "R4_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R2(proc));
		proc.memoriacontrole.R0_rec_R2(proc);
		nomeMicroInstrucao = "R0_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R2(proc));
		proc.memoriacontrole.R1_rec_R2(proc);
		nomeMicroInstrucao = "R1_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R2(proc));
		proc.memoriacontrole.R3_rec_R2(proc);
		nomeMicroInstrucao = "R3_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R2(proc));
		proc.memoriacontrole.R4_rec_R2(proc);
		nomeMicroInstrucao = "R4_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R3(proc));
		proc.memoriacontrole.R0_rec_R3(proc);
		nomeMicroInstrucao = "R0_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R3(proc));
		proc.memoriacontrole.R1_rec_R3(proc);
		nomeMicroInstrucao = "R1_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R3(proc));
		proc.memoriacontrole.R2_rec_R3(proc);
		nomeMicroInstrucao = "R2_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R3(proc));
		proc.memoriacontrole.R4_rec_R3(proc);
		nomeMicroInstrucao = "R4_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R4(proc));
		proc.memoriacontrole.R0_rec_R4(proc);
		nomeMicroInstrucao = "R0_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R4(proc));
		proc.memoriacontrole.R1_rec_R4(proc);
		nomeMicroInstrucao = "R1_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R4(proc));
		proc.memoriacontrole.R2_rec_R4(proc);
		nomeMicroInstrucao = "R2_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R4(proc));
		proc.memoriacontrole.R3_rec_R4(proc);
		nomeMicroInstrucao = "R3_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0(proc));
		proc.memoriacontrole.RDados_rec_R0(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void movR0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0(proc));
		proc.memoriacontrole.RDados_rec_R0(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void movR0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0(proc));
		proc.memoriacontrole.RDados_rec_R0(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void movR0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0(proc));
		proc.memoriacontrole.RDados_rec_R0(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void movR0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0(proc));
		proc.memoriacontrole.RDados_rec_R0(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void movR1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1(proc));
		proc.memoriacontrole.RDados_rec_R1(proc);
		nomeMicroInstrucao = "";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void movR1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1(proc));
		proc.memoriacontrole.RDados_rec_R1(proc);
		nomeMicroInstrucao = "";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1(proc));
		proc.memoriacontrole.RDados_rec_R1(proc);
		nomeMicroInstrucao = "";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1(proc));
		proc.memoriacontrole.RDados_rec_R1(proc);
		nomeMicroInstrucao = "";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1(proc));
		proc.memoriacontrole.RDados_rec_R1(proc);
		nomeMicroInstrucao = "";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2(proc));
		proc.memoriacontrole.RDados_rec_R2(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2(proc));
		proc.memoriacontrole.RDados_rec_R2(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2(proc));
		proc.memoriacontrole.RDados_rec_R2(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2(proc));
		proc.memoriacontrole.RDados_rec_R2(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2(proc));
		proc.memoriacontrole.RDados_rec_R2(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3(proc));
		proc.memoriacontrole.RDados_rec_R3(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3(proc));
		proc.memoriacontrole.RDados_rec_R3(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3(proc));
		proc.memoriacontrole.RDados_rec_R3(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3(proc));
		proc.memoriacontrole.RDados_rec_R3(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3(proc));
		proc.memoriacontrole.RDados_rec_R3(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4(proc));
		proc.memoriacontrole.RDados_rec_R4(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4(proc));
		proc.memoriacontrole.RDados_rec_R4(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4(proc));
		proc.memoriacontrole.RDados_rec_R4(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4(proc));
		proc.memoriacontrole.RDados_rec_R4(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movR4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4(proc));
		proc.memoriacontrole.RDados_rec_R4(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER0R0(Processador proc) {
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RDados(proc));
		proc.memoriacontrole.R0_rec_RDados(proc);
		nomeMicroInstrucao = "R0_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RDados(proc));
		proc.memoriacontrole.R1_rec_RDados(proc);
		nomeMicroInstrucao = "R1_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDados(proc));
		proc.memoriacontrole.R2_rec_RDados(proc);
		nomeMicroInstrucao = "R2_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDados(proc));
		proc.memoriacontrole.R3_rec_RDados(proc);
		nomeMicroInstrucao = "R3_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDados(proc));
		proc.memoriacontrole.R4_rec_RDados(proc);
		nomeMicroInstrucao = "R4_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RDados(proc));
		proc.memoriacontrole.R0_rec_RDados(proc);
		nomeMicroInstrucao = "R0_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RDados(proc));
		proc.memoriacontrole.R1_rec_RDados(proc);
		nomeMicroInstrucao = "R1_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDados(proc));
		proc.memoriacontrole.R2_rec_RDados(proc);
		nomeMicroInstrucao = "R2_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDados(proc));
		proc.memoriacontrole.R3_rec_RDados(proc);
		nomeMicroInstrucao = "R3_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDados(proc));
		proc.memoriacontrole.R4_rec_RDados(proc);
		nomeMicroInstrucao = "R4_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RDados(proc));
		proc.memoriacontrole.R0_rec_RDados(proc);
		nomeMicroInstrucao = "R0_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RDados(proc));
		proc.memoriacontrole.R1_rec_RDados(proc);
		nomeMicroInstrucao = "R1_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDados(proc));
		proc.memoriacontrole.R2_rec_RDados(proc);
		nomeMicroInstrucao = "R2_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDados(proc));
		proc.memoriacontrole.R3_rec_RDados(proc);
		nomeMicroInstrucao = "R3_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDados(proc));
		proc.memoriacontrole.R4_rec_RDados(proc);
		nomeMicroInstrucao = "R4_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RDados(proc));
		proc.memoriacontrole.R0_rec_RDados(proc);
		nomeMicroInstrucao = "R0_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RDados(proc));
		proc.memoriacontrole.R1_rec_RDados(proc);
		nomeMicroInstrucao = "R1_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDados(proc));
		proc.memoriacontrole.R2_rec_RDados(proc);
		nomeMicroInstrucao = "R2_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDados(proc));
		proc.memoriacontrole.R3_rec_RDados(proc);
		nomeMicroInstrucao = "R3_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDados(proc));
		proc.memoriacontrole.R4_rec_RDados(proc);
		nomeMicroInstrucao = "R4_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_RDados(proc));
		proc.memoriacontrole.R0_rec_RDados(proc);
		nomeMicroInstrucao = "R0_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_RDados(proc));
		proc.memoriacontrole.R1_rec_RDados(proc);
		nomeMicroInstrucao = "R1_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_RDados(proc));
		proc.memoriacontrole.R2_rec_RDados(proc);
		nomeMicroInstrucao = "R2_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_RDados(proc));
		proc.memoriacontrole.R3_rec_RDados(proc);
		nomeMicroInstrucao = "R3_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_RDados(proc));
		proc.memoriacontrole.R4_rec_RDados(proc);
		nomeMicroInstrucao = "R4_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void movER4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	/* ==================== Instrucoes CMP ==================== */

	public static void cmpImedR0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR0(proc));
		proc.memoriacontrole.RYmenosR0(proc);
		nomeMicroInstrucao = "RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpImedR1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR1(proc));
		proc.memoriacontrole.RYmenosR1(proc);
		nomeMicroInstrucao = "RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpImedR2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR2(proc));
		proc.memoriacontrole.RDadosmenosR2(proc);
		nomeMicroInstrucao = "RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpImedR3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR3(proc));
		proc.memoriacontrole.RDadosmenosR3(proc);
		nomeMicroInstrucao = "RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpImedR4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR4(proc));
		proc.memoriacontrole.RDadosmenosR4(proc);
		nomeMicroInstrucao = "RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpImedER0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpImedER1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpImedER2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpImedER3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpImedER4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R0(proc));
		proc.memoriacontrole.RY_rec_R0(proc);
		nomeMicroInstrucao = "RY_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR0(proc));
		proc.memoriacontrole.RYmenosR0(proc);
		nomeMicroInstrucao = "RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R0(proc));
		proc.memoriacontrole.RY_rec_R0(proc);
		nomeMicroInstrucao = "RY_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR1(proc));
		proc.memoriacontrole.RYmenosR1(proc);
		nomeMicroInstrucao = "RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0menosR2(proc));
		proc.memoriacontrole.R0menosR2(proc);
		nomeMicroInstrucao = "R0MENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0menosR3(proc));
		proc.memoriacontrole.R0menosR3(proc);
		nomeMicroInstrucao = "R0MENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0menosR4(proc));
		proc.memoriacontrole.R0menosR4(proc);
		nomeMicroInstrucao = "R0MENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R1(proc));
		proc.memoriacontrole.RY_rec_R1(proc);
		nomeMicroInstrucao = "RY_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR0(proc));
		proc.memoriacontrole.RYmenosR0(proc);
		nomeMicroInstrucao = "RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void cmpR1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R1(proc));
		proc.memoriacontrole.RY_rec_R1(proc);
		nomeMicroInstrucao = "RY_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR1(proc));
		proc.memoriacontrole.RYmenosR1(proc);
		nomeMicroInstrucao = "RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1menosR2(proc));
		proc.memoriacontrole.R1menosR2(proc);
		nomeMicroInstrucao = "R1MENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void cmpR1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1menosR3(proc));
		proc.memoriacontrole.R1menosR3(proc);
		nomeMicroInstrucao = "R1MENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1menosR4(proc));
		proc.memoriacontrole.R1menosR4(proc);
		nomeMicroInstrucao = "R1MENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2menosR0(proc));
		proc.memoriacontrole.R2menosR0(proc);
		nomeMicroInstrucao = "R2MENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2menosR1(proc));
		proc.memoriacontrole.R2menosR1(proc);
		nomeMicroInstrucao = "R2MENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RXmenosR2(proc));
		proc.memoriacontrole.RXmenosR2(proc);
		nomeMicroInstrucao = "RXMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RXmenosR3(proc));
		proc.memoriacontrole.RXmenosR3(proc);
		nomeMicroInstrucao = "RXMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RXmenosR4(proc));
		proc.memoriacontrole.RXmenosR4(proc);
		nomeMicroInstrucao = "RXMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3menosR0(proc));
		proc.memoriacontrole.R3menosR0(proc);
		nomeMicroInstrucao = "R3MENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3menosR1(proc));
		proc.memoriacontrole.R3menosR1(proc);
		nomeMicroInstrucao = "R3MENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RXmenosR2(proc));
		proc.memoriacontrole.RXmenosR2(proc);
		nomeMicroInstrucao = "RXMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RXmenosR3(proc));
		proc.memoriacontrole.RXmenosR3(proc);
		nomeMicroInstrucao = "RXMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RXmenosR4(proc));
		proc.memoriacontrole.RXmenosR4(proc);
		nomeMicroInstrucao = "RXMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4menosR0(proc));
		proc.memoriacontrole.R4menosR0(proc);
		nomeMicroInstrucao = "R4MENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4menosR1(proc));
		proc.memoriacontrole.R4menosR1(proc);
		nomeMicroInstrucao = "R4MENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RXmenosR2(proc));
		proc.memoriacontrole.RXmenosR2(proc);
		nomeMicroInstrucao = "RXMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RXmenosR3(proc));
		proc.memoriacontrole.RXmenosR3(proc);
		nomeMicroInstrucao = "RXMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RXmenosR4(proc));
		proc.memoriacontrole.RXmenosR4(proc);
		nomeMicroInstrucao = "RXMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0menosRY(proc));
		proc.memoriacontrole.R0menosRY(proc);
		nomeMicroInstrucao = "R0MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0menosRY(proc));
		proc.memoriacontrole.R0menosRY(proc);
		nomeMicroInstrucao = "R0MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0menosRY(proc));
		proc.memoriacontrole.R0menosRY(proc);
		nomeMicroInstrucao = "R0MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0menosRY(proc));
		proc.memoriacontrole.R0menosRY(proc);
		nomeMicroInstrucao = "R0MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0menosRY(proc));
		proc.memoriacontrole.R0menosRY(proc);
		nomeMicroInstrucao = "R0MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1menosRY(proc));
		proc.memoriacontrole.R1menosRY(proc);
		nomeMicroInstrucao = "R1MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1menosRY(proc));
		proc.memoriacontrole.R1menosRY(proc);
		nomeMicroInstrucao = "R1MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1menosRY(proc));
		proc.memoriacontrole.R1menosRY(proc);
		nomeMicroInstrucao = "R1MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1menosRY(proc));
		proc.memoriacontrole.R1menosRY(proc);
		nomeMicroInstrucao = "R1MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1menosRY(proc));
		proc.memoriacontrole.R1menosRY(proc);
		nomeMicroInstrucao = "R1MENOSRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2menosRX(proc));
		proc.memoriacontrole.R2menosRX(proc);
		nomeMicroInstrucao = "R2MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2menosRX(proc));
		proc.memoriacontrole.R2menosRX(proc);
		nomeMicroInstrucao = "R2MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2menosRX(proc));
		proc.memoriacontrole.R2menosRX(proc);
		nomeMicroInstrucao = "R2MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2menosRX(proc));
		proc.memoriacontrole.R2menosRX(proc);
		nomeMicroInstrucao = "R2MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2menosRX(proc));
		proc.memoriacontrole.R2menosRX(proc);
		nomeMicroInstrucao = "R2MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3menosRX(proc));
		proc.memoriacontrole.R3menosRX(proc);
		nomeMicroInstrucao = "R3MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3menosRX(proc));
		proc.memoriacontrole.R3menosRX(proc);
		nomeMicroInstrucao = "R3MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3menosRX(proc));
		proc.memoriacontrole.R3menosRX(proc);
		nomeMicroInstrucao = "R3MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3menosRX(proc));
		proc.memoriacontrole.R3menosRX(proc);
		nomeMicroInstrucao = "R3MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3menosRX(proc));
		proc.memoriacontrole.R3menosRX(proc);
		nomeMicroInstrucao = "R3MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4menosRX(proc));
		proc.memoriacontrole.R4menosRX(proc);
		nomeMicroInstrucao = "R4MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4menosRX(proc));
		proc.memoriacontrole.R4menosRX(proc);
		nomeMicroInstrucao = "R4MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4menosRX(proc));
		proc.memoriacontrole.R4menosRX(proc);
		nomeMicroInstrucao = "R4MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4menosRX(proc));
		proc.memoriacontrole.R4menosRX(proc);
		nomeMicroInstrucao = "R4MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpR4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4menosRX(proc));
		proc.memoriacontrole.R4menosRX(proc);
		nomeMicroInstrucao = "R4MENOSRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR0(proc));
		proc.memoriacontrole.RYmenosR0(proc);
		nomeMicroInstrucao = "RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR1(proc));
		proc.memoriacontrole.RYmenosR1(proc);
		nomeMicroInstrucao = "RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR2(proc));
		proc.memoriacontrole.RDadosmenosR2(proc);
		nomeMicroInstrucao = "RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR3(proc));
		proc.memoriacontrole.RDadosmenosR3(proc);
		nomeMicroInstrucao = "RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR4(proc));
		proc.memoriacontrole.RDadosmenosR4(proc);
		nomeMicroInstrucao = "RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR0(proc));
		proc.memoriacontrole.RYmenosR0(proc);
		nomeMicroInstrucao = "RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR1(proc));
		proc.memoriacontrole.RYmenosR1(proc);
		nomeMicroInstrucao = "RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR2(proc));
		proc.memoriacontrole.RDadosmenosR2(proc);
		nomeMicroInstrucao = "RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR3(proc));
		proc.memoriacontrole.RDadosmenosR3(proc);
		nomeMicroInstrucao = "RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR4(proc));
		proc.memoriacontrole.RDadosmenosR4(proc);
		nomeMicroInstrucao = "RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR0(proc));
		proc.memoriacontrole.RYmenosR0(proc);
		nomeMicroInstrucao = "RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR1(proc));
		proc.memoriacontrole.RYmenosR1(proc);
		nomeMicroInstrucao = "RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR2(proc));
		proc.memoriacontrole.RDadosmenosR2(proc);
		nomeMicroInstrucao = "RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR3(proc));
		proc.memoriacontrole.RDadosmenosR3(proc);
		nomeMicroInstrucao = "RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR4(proc));
		proc.memoriacontrole.RDadosmenosR4(proc);
		nomeMicroInstrucao = "RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR0(proc));
		proc.memoriacontrole.RYmenosR0(proc);
		nomeMicroInstrucao = "RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR1(proc));
		proc.memoriacontrole.RYmenosR1(proc);
		nomeMicroInstrucao = "RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR2(proc));
		proc.memoriacontrole.RDadosmenosR2(proc);
		nomeMicroInstrucao = "RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR3(proc));
		proc.memoriacontrole.RDadosmenosR3(proc);
		nomeMicroInstrucao = "RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR4(proc));
		proc.memoriacontrole.RDadosmenosR4(proc);
		nomeMicroInstrucao = "RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR0(proc));
		proc.memoriacontrole.RYmenosR0(proc);
		nomeMicroInstrucao = "RYMENOSR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosR1(proc));
		proc.memoriacontrole.RYmenosR1(proc);
		nomeMicroInstrucao = "RYMENOSR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR2(proc));
		proc.memoriacontrole.RDadosmenosR2(proc);
		nomeMicroInstrucao = "RDADOSMENOSR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR3(proc));
		proc.memoriacontrole.RDadosmenosR3(proc);
		nomeMicroInstrucao = "RDADOSMENOSR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDadosmenosR4(proc));
		proc.memoriacontrole.RDadosmenosR4(proc);
		nomeMicroInstrucao = "RDADOSMENOSR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void cmpER0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void cmpER0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void cmpER4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RYmenosRDados(proc));
		proc.memoriacontrole.RYmenosRDados(proc);
		nomeMicroInstrucao = "RYMENOSRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}
	/* ==================== Instrucoes AND ==================== */

	public static void andImedR0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andRY(proc));
		proc.memoriacontrole.R0_rec_R0andRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andImedR1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andRY(proc));
		proc.memoriacontrole.R1_rec_R1andRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andImedR2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andRDados(proc));
		proc.memoriacontrole.R2_rec_R2andRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andImedR3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andRDados(proc));
		proc.memoriacontrole.R3_rec_R3andRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andImedR4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andRDados(proc));
		proc.memoriacontrole.R4_rec_R4andRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andImedER0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andImedER1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andImedER2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andImedER3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andImedER4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R0(proc));
		proc.memoriacontrole.RY_rec_R0(proc);
		nomeMicroInstrucao = "RY_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andRY(proc));
		proc.memoriacontrole.R0_rec_R0andRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R0(proc));
		proc.memoriacontrole.RY_rec_R0(proc);
		nomeMicroInstrucao = "RY_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andRY(proc));
		proc.memoriacontrole.R1_rec_R1andRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andR0(proc));
		proc.memoriacontrole.R2_rec_R2andR0(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andR0(proc));
		proc.memoriacontrole.R3_rec_R3andR0(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andR0(proc));
		proc.memoriacontrole.R4_rec_R4andR0(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R1(proc));
		proc.memoriacontrole.RY_rec_R1(proc);
		nomeMicroInstrucao = "RY_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andRY(proc));
		proc.memoriacontrole.R0_rec_R0andRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R1(proc));
		proc.memoriacontrole.RY_rec_R1(proc);
		nomeMicroInstrucao = "RY_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andRY(proc));
		proc.memoriacontrole.R1_rec_R1andRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andR1(proc));
		proc.memoriacontrole.R2_rec_R2andR1(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andR1(proc));
		proc.memoriacontrole.R3_rec_R3andR1(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andR1(proc));
		proc.memoriacontrole.R4_rec_R4andR1(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andR2(proc));
		proc.memoriacontrole.R0_rec_R0andR2(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andR2(proc));
		proc.memoriacontrole.R1_rec_R1andR2(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andRX(proc));
		proc.memoriacontrole.R2_rec_R2andRX(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andRX(proc));
		proc.memoriacontrole.R3_rec_R3andRX(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andRX(proc));
		proc.memoriacontrole.R4_rec_R4andRX(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andR3(proc));
		proc.memoriacontrole.R0_rec_R0andR3(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andR3(proc));
		proc.memoriacontrole.R1_rec_R1andR3(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andRX(proc));
		proc.memoriacontrole.R2_rec_R2andRX(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andRX(proc));
		proc.memoriacontrole.R3_rec_R3andRX(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andRX(proc));
		proc.memoriacontrole.R4_rec_R4andRX(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andR4(proc));
		proc.memoriacontrole.R0_rec_R0andR4(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andR4(proc));
		proc.memoriacontrole.R1_rec_R1andR4(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andRX(proc));
		proc.memoriacontrole.R2_rec_R2andRX(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andRX(proc));
		proc.memoriacontrole.R3_rec_R3andRX(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andRX(proc));
		proc.memoriacontrole.R4_rec_R4andRX(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0andRY(proc));
		proc.memoriacontrole.RDados_rec_R0andRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0andRY(proc));
		proc.memoriacontrole.RDados_rec_R0andRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0andRY(proc));
		proc.memoriacontrole.RDados_rec_R0andRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0andRY(proc));
		proc.memoriacontrole.RDados_rec_R0andRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0andRY(proc));
		proc.memoriacontrole.RDados_rec_R0andRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1andRY(proc));
		proc.memoriacontrole.RDados_rec_R1andRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1andRY(proc));
		proc.memoriacontrole.RDados_rec_R1andRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1andRY(proc));
		proc.memoriacontrole.RDados_rec_R1andRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1andRY(proc));
		proc.memoriacontrole.RDados_rec_R1andRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1andRY(proc));
		proc.memoriacontrole.RDados_rec_R1andRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2andRX(proc));
		proc.memoriacontrole.RDados_rec_R2andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2andRX(proc));
		proc.memoriacontrole.RDados_rec_R2andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2andRX(proc));
		proc.memoriacontrole.RDados_rec_R2andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2andRX(proc));
		proc.memoriacontrole.RDados_rec_R2andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2andRX(proc));
		proc.memoriacontrole.RDados_rec_R2andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3andRX(proc));
		proc.memoriacontrole.RDados_rec_R3andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3andRX(proc));
		proc.memoriacontrole.RDados_rec_R3andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3andRX(proc));
		proc.memoriacontrole.RDados_rec_R3andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3andRX(proc));
		proc.memoriacontrole.RDados_rec_R3andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3andRX(proc));
		proc.memoriacontrole.RDados_rec_R3andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R3ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4andRX(proc));
		proc.memoriacontrole.RDados_rec_R4andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4andRX(proc));
		proc.memoriacontrole.RDados_rec_R4andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4andRX(proc));
		proc.memoriacontrole.RDados_rec_R4andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4andRX(proc));
		proc.memoriacontrole.RDados_rec_R4andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andR4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4andRX(proc));
		proc.memoriacontrole.RDados_rec_R4andRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4ANDRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andRY(proc));
		proc.memoriacontrole.R0_rec_R0andRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andRY(proc));
		proc.memoriacontrole.R1_rec_R1andRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andRDados(proc));
		proc.memoriacontrole.R2_rec_R2andRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andRDados(proc));
		proc.memoriacontrole.R3_rec_R3andRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andRDados(proc));
		proc.memoriacontrole.R4_rec_R4andRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andRY(proc));
		proc.memoriacontrole.R0_rec_R0andRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andRY(proc));
		proc.memoriacontrole.R1_rec_R1andRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andRDados(proc));
		proc.memoriacontrole.R2_rec_R2andRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andRDados(proc));
		proc.memoriacontrole.R3_rec_R3andRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andRDados(proc));
		proc.memoriacontrole.R4_rec_R4andRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andRY(proc));
		proc.memoriacontrole.R0_rec_R0andRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andRY(proc));
		proc.memoriacontrole.R1_rec_R1andRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andRDados(proc));
		proc.memoriacontrole.R2_rec_R2andRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andRDados(proc));
		proc.memoriacontrole.R3_rec_R3andRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andRDados(proc));
		proc.memoriacontrole.R4_rec_R4andRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andRY(proc));
		proc.memoriacontrole.R0_rec_R0andRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andRY(proc));
		proc.memoriacontrole.R1_rec_R1andRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andRDados(proc));
		proc.memoriacontrole.R2_rec_R2andRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andRDados(proc));
		proc.memoriacontrole.R3_rec_R3andRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andRDados(proc));
		proc.memoriacontrole.R4_rec_R4andRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0andRY(proc));
		proc.memoriacontrole.R0_rec_R0andRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1andRY(proc));
		proc.memoriacontrole.R1_rec_R1andRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2andRDados(proc));
		proc.memoriacontrole.R2_rec_R2andRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3andRDados(proc));
		proc.memoriacontrole.R3_rec_R3andRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4andRDados(proc));
		proc.memoriacontrole.R4_rec_R4andRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ANDRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void andER0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void andER0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void andER4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosandRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosandRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSANDRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	/* ==================== Instrucoes OR ===================== */

	public static void orImedR0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orRY(proc));
		proc.memoriacontrole.R0_rec_R0orRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orImedR1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orRY(proc));
		proc.memoriacontrole.R1_rec_R1orRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orImedR2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orRDados(proc));
		proc.memoriacontrole.R2_rec_R2orRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orImedR3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orRDados(proc));
		proc.memoriacontrole.R3_rec_R3orRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orImedR4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orRDados(proc));
		proc.memoriacontrole.R4_rec_R4orRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orImedER0(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orImedER1(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orImedER2(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orImedER3(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orImedER4(Processador proc) {
		Cabecalho(proc);

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R0(proc));
		proc.memoriacontrole.RY_rec_R0(proc);
		nomeMicroInstrucao = "RY_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orRY(proc));
		proc.memoriacontrole.R0_rec_R0orRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R0(proc));
		proc.memoriacontrole.RY_rec_R0(proc);
		nomeMicroInstrucao = "RY_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orRY(proc));
		proc.memoriacontrole.R1_rec_R1orRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orR0(proc));
		proc.memoriacontrole.R2_rec_R2orR0(proc);
		nomeMicroInstrucao = "R2_REC_R2ORR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orR0(proc));
		proc.memoriacontrole.R3_rec_R3orR0(proc);
		nomeMicroInstrucao = "R3_REC_R3ORR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orR0(proc));
		proc.memoriacontrole.R4_rec_R4orR0(proc);
		nomeMicroInstrucao = "R4_REC_R4ORR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R1(proc));
		proc.memoriacontrole.RY_rec_R1(proc);
		nomeMicroInstrucao = "RY_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orRY(proc));
		proc.memoriacontrole.R0_rec_R0orRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_R1(proc));
		proc.memoriacontrole.RY_rec_R1(proc);
		nomeMicroInstrucao = "RY_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orRY(proc));
		proc.memoriacontrole.R1_rec_R1orRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orR1(proc));
		proc.memoriacontrole.R2_rec_R2orR1(proc);
		nomeMicroInstrucao = "R2_REC_R2ORR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orR1(proc));
		proc.memoriacontrole.R3_rec_R3orR1(proc);
		nomeMicroInstrucao = "R3_REC_R3ORR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orR1(proc));
		proc.memoriacontrole.R4_rec_R4orR1(proc);
		nomeMicroInstrucao = "R4_REC_R4ORR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orR2(proc));
		proc.memoriacontrole.R0_rec_R0orR2(proc);
		nomeMicroInstrucao = "R0_REC_R0ORR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orR2(proc));
		proc.memoriacontrole.R1_rec_R1orR2(proc);
		nomeMicroInstrucao = "R1_REC_R1ORR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orRX(proc));
		proc.memoriacontrole.R2_rec_R2orRX(proc);
		nomeMicroInstrucao = "R2_REC_R2ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orRX(proc));
		proc.memoriacontrole.R3_rec_R3orRX(proc);
		nomeMicroInstrucao = "R3_REC_R3ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R2(proc));
		proc.memoriacontrole.RX_rec_R2(proc);
		nomeMicroInstrucao = "RX_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orRX(proc));
		proc.memoriacontrole.R4_rec_R4orRX(proc);
		nomeMicroInstrucao = "R4_REC_R4ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orR3(proc));
		proc.memoriacontrole.R0_rec_R0orR3(proc);
		nomeMicroInstrucao = "R0_REC_R0ORR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orR3(proc));
		proc.memoriacontrole.R1_rec_R1orR3(proc);
		nomeMicroInstrucao = "R1_REC_R1ORR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orRX(proc));
		proc.memoriacontrole.R2_rec_R2orRX(proc);
		nomeMicroInstrucao = "R2_REC_R2ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orRX(proc));
		proc.memoriacontrole.R3_rec_R3orRX(proc);
		nomeMicroInstrucao = "R3_REC_R3ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R3(proc));
		proc.memoriacontrole.RX_rec_R3(proc);
		nomeMicroInstrucao = "RX_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orRX(proc));
		proc.memoriacontrole.R4_rec_R4orRX(proc);
		nomeMicroInstrucao = "R4_REC_R4ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orR4(proc));
		proc.memoriacontrole.R0_rec_R0orR4(proc);
		nomeMicroInstrucao = "R0_REC_R0ORR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orR4(proc));
		proc.memoriacontrole.R1_rec_R1orR4(proc);
		nomeMicroInstrucao = "R1_REC_R1ORR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orRX(proc));
		proc.memoriacontrole.R2_rec_R2orRX(proc);
		nomeMicroInstrucao = "R2_REC_R2ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orRX(proc));
		proc.memoriacontrole.R3_rec_R3orRX(proc);
		nomeMicroInstrucao = "R3_REC_R3ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_R4(proc));
		proc.memoriacontrole.RX_rec_R4(proc);
		nomeMicroInstrucao = "RX_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orRX(proc));
		proc.memoriacontrole.R4_rec_R4orRX(proc);
		nomeMicroInstrucao = "R4_REC_R4ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0orRY(proc));
		proc.memoriacontrole.RDados_rec_R0orRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0orRY(proc));
		proc.memoriacontrole.RDados_rec_R0orRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0orRY(proc));
		proc.memoriacontrole.RDados_rec_R0orRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0orRY(proc));
		proc.memoriacontrole.RDados_rec_R0orRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R0orRY(proc));
		proc.memoriacontrole.RDados_rec_R0orRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R0ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1orRY(proc));
		proc.memoriacontrole.RDados_rec_R1orRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1orRY(proc));
		proc.memoriacontrole.RDados_rec_R1orRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1orRY(proc));
		proc.memoriacontrole.RDados_rec_R1orRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1orRY(proc));
		proc.memoriacontrole.RDados_rec_R1orRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R1orRY(proc));
		proc.memoriacontrole.RDados_rec_R1orRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2orRX(proc));
		proc.memoriacontrole.RDados_rec_R2orRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2orRX(proc));
		proc.memoriacontrole.RDados_rec_R2orRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2orRX(proc));
		proc.memoriacontrole.RDados_rec_R2orRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2orRX(proc));
		proc.memoriacontrole.RDados_rec_R2orRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R2orRX(proc));
		proc.memoriacontrole.RDados_rec_R2orRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R2ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3orRX(proc));
		proc.memoriacontrole.RDados_rec_R3orRX(proc);
		nomeMicroInstrucao = "";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3orRX(proc));
		proc.memoriacontrole.RDados_rec_R3orRX(proc);
		nomeMicroInstrucao = "";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3orRX(proc));
		proc.memoriacontrole.RDados_rec_R3orRX(proc);
		nomeMicroInstrucao = "";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3orRX(proc));
		proc.memoriacontrole.RDados_rec_R3orRX(proc);
		nomeMicroInstrucao = "";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R3orRX(proc));
		proc.memoriacontrole.RDados_rec_R3orRX(proc);
		nomeMicroInstrucao = "";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4orRX(proc));
		proc.memoriacontrole.RDados_rec_R4orRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4orRX(proc));
		proc.memoriacontrole.RDados_rec_R4orRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4orRX(proc));
		proc.memoriacontrole.RDados_rec_R4orRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4orRX(proc));
		proc.memoriacontrole.RDados_rec_R4orRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orR4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RX_rec_RDados(proc));
		proc.memoriacontrole.RX_rec_RDados(proc);
		nomeMicroInstrucao = "RX_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_R4orRX(proc));
		proc.memoriacontrole.RDados_rec_R4orRX(proc);
		nomeMicroInstrucao = "RDADOS_REC_R4ORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER0R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orRY(proc));
		proc.memoriacontrole.R0_rec_R0orRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER0R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orRY(proc));
		proc.memoriacontrole.R1_rec_R1orRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER0R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orRDados(proc));
		proc.memoriacontrole.R2_rec_R2orRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER0R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orRDados(proc));
		proc.memoriacontrole.R3_rec_R3orRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER0R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orRDados(proc));
		proc.memoriacontrole.R4_rec_R4orRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER1R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orRY(proc));
		proc.memoriacontrole.R0_rec_R0orRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER1R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orRY(proc));
		proc.memoriacontrole.R1_rec_R1orRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER1R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orRDados(proc));
		proc.memoriacontrole.R2_rec_R2orRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER1R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orRDados(proc));
		proc.memoriacontrole.R3_rec_R3orRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER1R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orRDados(proc));
		proc.memoriacontrole.R4_rec_R4orRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER2R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orRY(proc));
		proc.memoriacontrole.R0_rec_R0orRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER2R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orRY(proc));
		proc.memoriacontrole.R1_rec_R1orRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER2R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orRDados(proc));
		proc.memoriacontrole.R2_rec_R2orRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER2R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orRDados(proc));
		proc.memoriacontrole.R3_rec_R3orRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER2R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orRDados(proc));
		proc.memoriacontrole.R4_rec_R4orRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER3R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orRY(proc));
		proc.memoriacontrole.R0_rec_R0orRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER3R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orRY(proc));
		proc.memoriacontrole.R1_rec_R1orRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER3R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orRDados(proc));
		proc.memoriacontrole.R2_rec_R2orRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER3R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orRDados(proc));
		proc.memoriacontrole.R3_rec_R3orRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER3R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orRDados(proc));
		proc.memoriacontrole.R4_rec_R4orRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER4R0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_R0orRY(proc));
		proc.memoriacontrole.R0_rec_R0orRY(proc);
		nomeMicroInstrucao = "R0_REC_R0ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER4R1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_R1orRY(proc));
		proc.memoriacontrole.R1_rec_R1orRY(proc);
		nomeMicroInstrucao = "R1_REC_R1ORRY";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER4R2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_R2orRDados(proc));
		proc.memoriacontrole.R2_rec_R2orRDados(proc);
		nomeMicroInstrucao = "R2_REC_R2ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER4R3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_R3orRDados(proc));
		proc.memoriacontrole.R3_rec_R3orRDados(proc);
		nomeMicroInstrucao = "R3_REC_R3ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER4R4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_R4orRDados(proc));
		proc.memoriacontrole.R4_rec_R4orRDados(proc);
		nomeMicroInstrucao = "R4_REC_R4ORRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER0ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void orER0ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

	}

	public static void orER0ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER0ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER0ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER1ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER1ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER1ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER1ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER1ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER2ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER2ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER2ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER2ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER2ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER3ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER3ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER3ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER3ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER3ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER4ER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER4ER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER4ER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER4ER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void orER4ER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_RDados(proc));
		proc.memoriacontrole.RY_rec_RDados(proc);
		nomeMicroInstrucao = "RY_REC_RDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_RDadosorRY(proc));
		proc.memoriacontrole.RDados_rec_RDadosorRY(proc);
		nomeMicroInstrucao = "RDADOS_REC_RDADOSORRX";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	/* ==================== Instrucoes NOT ==================== */

	public static void notR0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_notR0(proc));
		proc.memoriacontrole.R0_rec_notR0(proc);
		nomeMicroInstrucao = "RO_REC_NOTR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void notR1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_notR1(proc));
		proc.memoriacontrole.R1_rec_notR1(proc);
		nomeMicroInstrucao = "R1_REC_NOTR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void notR2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_notR2(proc));
		proc.memoriacontrole.R2_rec_notR2(proc);
		nomeMicroInstrucao = "R2_REC_NOTR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void notR3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_notR3(proc));
		proc.memoriacontrole.R3_rec_notR3(proc);
		nomeMicroInstrucao = "R3_REC_NOTR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void notR4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_notR4(proc));
		proc.memoriacontrole.R4_rec_notR4(proc);
		nomeMicroInstrucao = "R4_REC_NOTR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void notER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_notRDados(proc));
		proc.memoriacontrole.RDados_rec_notRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_NOTRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void notER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_notRDados(proc));
		proc.memoriacontrole.RDados_rec_notRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_NOTRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void notER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_notRDados(proc));
		proc.memoriacontrole.RDados_rec_notRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_NOTRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void notER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_notRDados(proc));
		proc.memoriacontrole.RDados_rec_notRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_NOTRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void notER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_notRDados(proc));
		proc.memoriacontrole.RDados_rec_notRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_NOTRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	/* ==================== Instrucoes NEG ==================== */

	public static void negR0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_negR0(proc));
		proc.memoriacontrole.R0_rec_negR0(proc);
		nomeMicroInstrucao = "R0_REC_NEGR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void negR1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_negR1(proc));
		proc.memoriacontrole.R1_rec_negR1(proc);
		nomeMicroInstrucao = "R1_REC_NEGR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void negR2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_negR2(proc));
		proc.memoriacontrole.R2_rec_negR2(proc);
		nomeMicroInstrucao = "R2_REC_NEGR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void negR3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_negR3(proc));
		proc.memoriacontrole.R3_rec_negR3(proc);
		nomeMicroInstrucao = "R3_REC_NEGR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void negR4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_negR4(proc));
		proc.memoriacontrole.R4_rec_negR4(proc);
		nomeMicroInstrucao = "R4_REC_NEGR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void negER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_negRDados(proc));
		proc.memoriacontrole.RDados_rec_negRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_NEGRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void negER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_negRDados(proc));
		proc.memoriacontrole.RDados_rec_negRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_NEGRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void negER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_negRDados(proc));
		proc.memoriacontrole.RDados_rec_negRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_NEGRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void negER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_negRDados(proc));
		proc.memoriacontrole.RDados_rec_negRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_NEGRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void negER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_negRDados(proc));
		proc.memoriacontrole.RDados_rec_negRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_NEGRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	/* ==================== Instrucoes CLR ==================== */

	public static void clrR0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_0(proc));
		proc.memoriacontrole.R0_rec_0(proc);
		nomeMicroInstrucao = "R0_REC_0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void clrR1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_0(proc));
		proc.memoriacontrole.R1_rec_0(proc);
		nomeMicroInstrucao = "R1_REC_0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void clrR2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_0(proc));
		proc.memoriacontrole.R2_rec_0(proc);
		nomeMicroInstrucao = "R2_REC_0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void clrR3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_0(proc));
		proc.memoriacontrole.R3_rec_0(proc);
		nomeMicroInstrucao = "R3_REC_0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void clrR4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_0(proc));
		proc.memoriacontrole.R4_rec_0(proc);
		nomeMicroInstrucao = "R4_REC_0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void clrER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_0(proc));
		proc.memoriacontrole.RDados_rec_0(proc);
		nomeMicroInstrucao = "RDADOS_REC_0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void clrER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_0(proc));
		proc.memoriacontrole.RDados_rec_0(proc);
		nomeMicroInstrucao = "RDADOS_REC_0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
		
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void clrER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_0(proc));
		proc.memoriacontrole.RDados_rec_0(proc);
		nomeMicroInstrucao = "RDADOS_REC_0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void clrER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_0(proc));
		proc.memoriacontrole.RDados_rec_0(proc);
		nomeMicroInstrucao = "RDADOS_REC_0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void clrER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_0(proc));
		proc.memoriacontrole.RDados_rec_0(proc);
		nomeMicroInstrucao = "RDADOS_REC_0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	/* ==================== Instrucoes SHL ==================== */

	public static void shlR0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_shlR0(proc));
		proc.memoriacontrole.R0_rec_shlR0(proc);
		nomeMicroInstrucao = "R0_REC_SHLR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shlR1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_shlR1(proc));
		proc.memoriacontrole.R1_rec_shlR1(proc);
		nomeMicroInstrucao = "R1_REC_SHLR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shlR2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_shlR2(proc));
		proc.memoriacontrole.R2_rec_shlR2(proc);
		nomeMicroInstrucao = "R2_REC_SHLR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shlR3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_shlR3(proc));
		proc.memoriacontrole.R3_rec_shlR3(proc);
		nomeMicroInstrucao = "R3_REC_SHLR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shlR4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_shlR4(proc));
		proc.memoriacontrole.R4_rec_shlR4(proc);
		nomeMicroInstrucao = "R4_REC_SHLR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shlER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_shlRDados(proc));
		proc.memoriacontrole.RDados_rec_shlRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_SHLRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shlER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_shlRDados(proc));
		proc.memoriacontrole.RDados_rec_shlRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_SHLRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shlER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_shlRDados(proc));
		proc.memoriacontrole.RDados_rec_shlRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_SHLRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shlER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_shlRDados(proc));
		proc.memoriacontrole.RDados_rec_shlRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_SHLRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shlER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_shlRDados(proc));
		proc.memoriacontrole.RDados_rec_shlRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_SHLRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	/* ==================== Instrucoes SHR ==================== */

	public static void shrR0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R0_rec_shrR0(proc));
		proc.memoriacontrole.R0_rec_shrR0(proc);
		nomeMicroInstrucao = "R0_REC_SHRR0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shrR1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R1_rec_shrR1(proc));
		proc.memoriacontrole.R1_rec_shrR1(proc);
		nomeMicroInstrucao = "R1_REC_SHRR1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shrR2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R2_rec_shrR2(proc));
		proc.memoriacontrole.R2_rec_shrR2(proc);
		nomeMicroInstrucao = "R2_REC_SHRR2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shrR3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R3_rec_shrR3(proc));
		proc.memoriacontrole.R3_rec_shrR3(proc);
		nomeMicroInstrucao = "R3_REC_SHRR3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shrR4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_R4_rec_shrR4(proc));
		proc.memoriacontrole.R4_rec_shrR4(proc);
		nomeMicroInstrucao = "R4_REC_SHRR4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shrER0(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R0(proc));
		proc.memoriacontrole.REnd_rec_R0(proc);
		nomeMicroInstrucao = "REND_REC_R0";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_shrRDados(proc));
		proc.memoriacontrole.RDados_rec_shrRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_SHRRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shrER1(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R1(proc));
		proc.memoriacontrole.REnd_rec_R1(proc);
		nomeMicroInstrucao = "REND_REC_R1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_shrRDados(proc));
		proc.memoriacontrole.RDados_rec_shrRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_SHRRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shrER2(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R2(proc));
		proc.memoriacontrole.REnd_rec_R2(proc);
		nomeMicroInstrucao = "REND_REC_R2";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_shrRDados(proc));
		proc.memoriacontrole.RDados_rec_shrRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_SHRRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shrER3(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R3(proc));
		proc.memoriacontrole.REnd_rec_R3(proc);
		nomeMicroInstrucao = "REND_REC_R3";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_shrRDados(proc));
		proc.memoriacontrole.RDados_rec_shrRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_SHRRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	public static void shrER4(Processador proc) {
		Cabecalho(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_R4(proc));
		proc.memoriacontrole.REnd_rec_R4(proc);
		nomeMicroInstrucao = "REND_REC_R4";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_shrRDados(proc));
		proc.memoriacontrole.RDados_rec_shrRDados(proc);
		nomeMicroInstrucao = "RDADOS_REC_SHRRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Escreve(proc);
		nomeMicroInstrucao = "ESCREVE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}

	/* ================ Instrucoes de Desvio ==================== */

	public static void brz(Processador proc) {
		Cabecalho(proc);
		if (proc.ula.getFlags()[Ula.ZERO] == 1) {
			jmp(proc, false);
		}
		else {
			proc.registrador.pc += 2;
		}
	}

	public static void brn(Processador proc) {
		Cabecalho(proc);
		if (proc.ula.getFlags()[Ula.SINAL] == 1) {
			jmp(proc, false);
		}
		else {
			proc.registrador.pc += 2;
		}
	}

	public static void bre(Processador proc) {
		Cabecalho(proc);
		if (proc.ula.getFlags()[Ula.ZERO] == 1) {
			jmp(proc, false);
		}
		else {
			proc.registrador.pc += 2;
		}
	}

	public static void brl(Processador proc) {
		Cabecalho(proc);
		if (proc.ula.getFlags()[Ula.SINAL] != proc.ula.getFlags()[Ula.OVERFLOW]) {
			jmp(proc, false);
		}
		else {
			proc.registrador.pc += 2;
		}
	}

	public static void brg(Processador proc) {
		Cabecalho(proc);
		if (proc.ula.getFlags()[Ula.SINAL] == proc.ula.getFlags()[Ula.OVERFLOW] && proc.ula.getFlags()[Ula.ZERO] == 0) {
			jmp(proc, false);
		}
		else {
			proc.registrador.pc += 2;
		}
	}

	public static void brc(Processador proc) {
		Cabecalho(proc);
		if (proc.ula.getFlags()[Ula.CARRY] == 1) {
			jmp(proc, false);
		}
		else {
			proc.registrador.pc += 2;
		}
	}

	public static void jmp(Processador proc, boolean executa_cabecalho) {
		if (executa_cabecalho) {
			Cabecalho(proc);
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RY_rec_PC(proc));
		proc.memoriacontrole.RY_rec_PC(proc);
		nomeMicroInstrucao = "RY_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_REnd_rec_PC(proc));
		proc.memoriacontrole.REnd_rec_PC(proc);

		nomeMicroInstrucao = "REND_REC_PC";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		proc.memoriacontrole.Le(proc);
		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		nomeMicroInstrucao = "LE";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_RDados_rec_Inflida(proc));
		proc.memoriacontrole.RDados_rec_Inflida(proc);

		nomeMicroInstrucao = "RDADOS_REC_INFLIDA";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_RYmaisRDados(proc));
		proc.memoriacontrole.PC_rec_RYmaisRDados(proc);
		nomeMicroInstrucao = "PC_REC_RYMAISRDADOS";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}

		PainelPrincipal.rEndUC = String.valueOf(proc.memoriacontrole.Get_Endereco_PC_rec_PCmais1(proc));
		proc.memoriacontrole.PC_rec_PCmais1(proc);
		nomeMicroInstrucao = "PC_REC_PCMAIS1";
		Comecar.listaMemoriaControl.select(Comecar.retornarIndexListMemoriaControle(nomeMicroInstrucao));
		try {				
			while (Controlador.executa_por_micro) {// interrompe a thread
				sleep(1000 / 80);
				Comecar.status.setText("Esperando ...");

			}
			if (Comecar.cliqueProximoPassoMicroInstrucao){
				Controlador.executa_por_micro = true;
			}
		} catch (Exception e) {
			System.out.println("Erro na Thread Instrucoes");
		}
	}
}
